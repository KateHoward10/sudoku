{"version":3,"sources":["helpers.js","components/Controls/styles.js","components/Controls/index.js","components/Buttons/styles.js","components/Buttons/index.js","components/Cell/styles.js","components/Cell/index.js","components/Grid/index.js","components/Footer/styles.js","components/Footer/index.js","components/Settings/styles.js","components/Settings/index.js","App.js","hooks/useInterval.js","serviceWorker.js","index.js"],"names":["getRating","number","Math","round","formatTime","time","floor","Container","styled","div","Button","button","StarContainer","span","rating","Controls","status","start","giveUp","playing","onClick","window","confirm","Buttons","onPress","Array","from","keys","map","i","key","value","StyledCell","props","index","wrong","Input","input","focused","Cell","onFocus","onEnter","currentInput","Fragment","onChange","Grid","OpenButton","Footer","openModal","Background","CloseButton","ToggleContainer","Toggle","label","highlight","Hidden","Settings","topGames","closeModal","thisTime","toggleHighlight","length","game","date","type","e","target","checked","localStorage","setItem","App","useState","togglePlaying","setTime","puzzle","setPuzzle","setRating","guesses","setGuesses","setStatus","modalOpen","toggleModalOpen","getItem","setCurrentInput","JSON","parse","setTopGames","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","solvepuzzle","join","today","Date","updatedGames","push","toLocaleDateString","sort","a","b","slice","stringify","every","guess","fill","newPuzzle","makepuzzle","newRating","ratepuzzle","preventDefault","newGuesses","parseInt","undefined","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NAAO,SAASA,EAAUC,GACxB,OAAQC,KAAKC,MAAMF,IACjB,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,SACT,QACE,OAAO,MAIN,SAASG,EAAWC,GACzB,MAAM,GAAN,OAAUH,KAAKI,MAAMD,EAAO,IAAM,GAAxB,WAAiCH,KAAKI,MAAMD,EAAO,KAAQH,KAAKI,MAAMD,EAAO,IAAvF,YACEA,EAAO,GAAK,GAAZ,WAAqBA,EAAO,IAAOA,EAAO,I,0UCnBvC,IAAME,EAAYC,IAAOC,IAAV,KAQTC,EAASF,IAAOG,OAAV,KAKNC,EAAgBJ,IAAOK,MAClC,gBAAGC,EAAH,EAAGA,OAAH,+DAC8CA,EAAS,EAAK,IAD5D,wBACgFA,EAAS,EAAK,IAD9F,uFCMaC,MAlBf,YAA+D,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASL,EAAU,EAAVA,OAMlD,OACE,kBAACP,EAAD,KACE,kBAACG,EAAD,CAAQU,QAASD,EANrB,WACME,OAAOC,QAAQ,sCAAsCJ,KAKlBD,GAAQE,EAAU,UAAYH,EAAS,aAAe,QAC1FG,GACC,6BACGnB,EAAUc,GADb,IACsB,kBAACF,EAAD,CAAeE,OAAQA,GAAvB,qC,8bCbvB,IAAMP,EAAYC,IAAOC,IAAV,KAWTC,EAASF,IAAOG,OAAV,KCKJY,MAff,YAA+B,IAAZC,EAAW,EAAXA,QACjB,OACE,kBAAC,EAAD,KACGC,MAAMC,KAAKD,MAAM,GAAGE,QAAQC,KAAI,SAAAC,GAAC,OAChC,kBAAC,EAAD,CAAQC,IAAKD,EAAGE,MAAOF,EAAI,EAAGT,QAASI,GACpCK,EAAI,MAGT,kBAAC,EAAD,CAAQE,MAAO,KAAMX,QAASI,GAA9B,Y,uuBCTC,IAAMQ,EAAaxB,IAAOC,KAC/B,SAAAwB,GAAK,wGAIWA,EAAMC,MAAQ,IAAM,GAAKD,EAAMC,MAAQ,IAAM,EAAI,EAAI,EAJhE,4CAKaD,EAAMC,MAAQ,IAAMD,EAAMC,MAAQ,IAAQD,EAAMC,MAAQ,IAAMD,EAAMC,MAAQ,GAAM,EAAI,EALnG,kEAQSD,EAAME,MAAQ,qBAAuB,OAR9C,UAYMC,EAAQ5B,IAAO6B,MAAV,KAcL3B,EAASF,IAAOG,OAAV,KAcH,SAAAsB,GAAK,OAAKA,EAAMK,QAAU,4BAA8B,UCvBzDC,MAjBf,YAAgF,IAAhEL,EAA+D,EAA/DA,MAAOjC,EAAwD,EAAxDA,OAAQuC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,QAASV,EAA8B,EAA9BA,MAAOI,EAAuB,EAAvBA,MAAOO,EAAgB,EAAhBA,aAC7D,OACE,kBAACV,EAAD,CAAYE,MAAOA,EAAOC,MAAOA,GAC9BlC,GAGC,kBAAC,IAAM0C,SAAP,KACE,kBAACP,EAAD,CAAOL,MAAOA,EAAOa,SAAUH,IAC/B,kBAAC,EAAD,CAAQrB,QAASoB,EAASF,QAASI,IAAiBR,IAAUC,GAC3DJ,M,waCVb,IAcec,EAdFrC,IAAOC,IAAV,K,mSCAH,IAAMF,EAAYC,IAAOC,IAAV,KAOTqC,EAAatC,IAAOG,OAAV,KCIRoC,MATf,YAAsC,IAApB1C,EAAmB,EAAnBA,KAAM2C,EAAa,EAAbA,UACtB,OACE,kBAAC,EAAD,KACE,2BAAI5C,EAAWC,IACf,kBAACyC,EAAD,CAAY1B,QAAS4B,GAArB,c,4nCCNC,IAAMC,EAAazC,IAAOC,IAAV,KAYVF,EAAYC,IAAOC,IAAV,KAUTyC,EAAc1C,IAAOG,OAAV,KAOXwC,EAAkB3C,IAAOC,IAAV,KAMf2C,EAAS5C,IAAO6C,MAAV,KAQW,SAAApB,GAAK,OAAIA,EAAMqB,UAAY,QAAU,UAKtDC,EAAS/C,IAAO6B,MAAV,KCJJmB,MA1Cf,YAAmF,IAA/DC,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,SAAUL,EAA8B,EAA9BA,UAAWM,EAAmB,EAAnBA,gBAO7D,OACE,kBAACX,EAAD,KACE,kBAAC,EAAD,KACE,kBAACC,EAAD,CAAa9B,QAASsC,GAAtB,UACCC,GAAY,yCAAevD,EAAWuD,GAA1B,KACb,iDACCF,EAASI,OACR,4BACGJ,GACCA,EAAS7B,KAAI,SAACkC,EAAM5B,GAAP,OACX,wBAAIJ,IAAKI,GACP,gCAAS4B,EAAKC,MADhB,IACgC3D,EAAW0D,EAAKzD,MADhD,KACyDL,EAAU8D,EAAKhD,QADxE,SAMN,2CAEA6C,GACA,kBAACR,EAAD,+BAEE,kBAACC,EAAD,CAAQE,UAAWA,GACjB,kBAACC,EAAD,CACES,KAAK,WACLpB,SA7Bd,SAAgBqB,GACdL,EAAgBK,EAAEC,OAAOC,SACzBC,aAAaC,QAAQ,wBAAyBJ,EAAEC,OAAOC,YA6B5Cb,GAAa,cC+FbgB,MA1Hf,WAAgB,IAAD,EACoBC,oBAAS,GAD7B,mBACNpD,EADM,KACGqD,EADH,OAEWD,mBAAS,GAFpB,mBAENlE,EAFM,KAEAoE,EAFA,OAGeF,mBAAS9C,MAAMC,KAAKD,MAAM,MAHzC,mBAGNiD,EAHM,KAGEC,EAHF,OAIeJ,mBAAS,MAJxB,mBAINzD,EAJM,KAIE8D,EAJF,OAKiBL,mBAAS,MAL1B,mBAKNM,EALM,KAKGC,EALH,OAMeP,mBAAS,MANxB,mBAMNvD,EANM,KAME+D,EANF,OAOwBR,oBAAS,GAPjC,mBAONS,EAPM,KAOKC,EAPL,OAQwBV,mBAA2D,SAAlDH,aAAac,QAAQ,2BAAuC,GAR7F,mBAQN5B,EARM,KAQKM,EARL,OAS2BW,mBAAS,MATpC,mBASN7B,EATM,KASQyC,EATR,OAUmBZ,mBAASa,KAAKC,MAAMjB,aAAac,QAAQ,cAAgB,IAV5E,mBAUNzB,EAVM,KAUI6B,EAVJ,KAgEb,OCxEa,SAAqBC,EAAUC,GAC5C,IAAMC,EAAgBC,mBACtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAEJI,qBAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAMK,EAAKC,aAJb,WACEL,EAAcG,YAGeJ,GAC7B,OAAO,WACLO,cAAcF,OAGjB,CAACL,IDuBJQ,EACE,WACEvB,EAAQpE,EAAO,KAEjBc,EAAU,IAAO,MAGnBwE,qBAAU,WACR,GACEd,GACAoB,sBAAYvB,IACZG,EAAQqB,KAAK,MACXD,sBAAYvB,GACT9C,KAAI,SAAA3B,GAAM,OAAIA,EAAS,KACvBiG,KAAK,IACV,CAEA,GADAnB,EAAU,UACNtB,EAASI,OAAS,GAAKxD,EAAOoD,EAASA,EAASI,OAAS,GAAGxD,KAAM,CACpE,IAAM8F,EAAQ,IAAIC,KACdC,EAAe5C,EACnB4C,EAAaC,KAAK,CAAEjG,OAAMS,SAAQiD,KAAMoC,EAAMI,mBAAmB,YACjEF,EAAeA,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEpG,KAAOqG,EAAErG,SACrCwD,OAAS,IAAGwC,EAAeA,EAAaM,MAAM,EAAG,IAClEvC,aAAaC,QAAQ,WAAYe,KAAKwB,UAAUP,IAChDf,EAAYe,GAEd7B,GAAc,GACdS,GAAgB,QACPJ,GAAWA,EAAQgC,OAAM,SAAAC,GAAK,MAAqB,kBAAVA,MAClD/B,EAAU,YAEX,CAACF,EAASH,EAAQjB,EAAUpD,EAAMS,IAGnC,6BACE,kBAAC,EAAD,CACEE,OAAQA,EACRC,MAxDN,WACE0D,EAAUlD,MAAMC,KAAKD,MAAM,KAAKsF,KAAK,IACrChC,EAAU,MACVP,GAAc,GACdC,EAAQ,GACRU,EAAgB,MAChB,IAAM6B,EAAYC,uBAClBtC,EAAUqC,GACV,IAAME,EAAYC,qBAAWH,EAAW,GACxCpC,EAAUsC,GACVpC,EAAWkC,EAAUpF,KAAI,SAAA3B,GAAM,OAAgB,OAAXA,EAAkBA,EAAS,EAAI,UA+C/DiB,OA5CN,WACE6D,EAAU,YACVP,GAAc,GACdG,EAAUsB,sBAAYvB,KA0ClBvD,QAASA,EACTL,OAAQA,IAEV,kBAAC,EAAD,CACEU,QAAS,SAAAyC,GACPA,EAAEmD,iBACF,IAAMC,EAAaxC,EAAQjD,KAAI,SAACkF,EAAOjF,GACrC,OAAIA,IAAMa,EACD4E,SAASrD,EAAEC,OAAOnC,OACb+E,KAEhBhC,EAAWuC,MAGf,kBAAC,EAAD,KACG3C,EAAO9C,KAAI,SAAC3B,EAAQiC,GAAT,OACV,kBAAC,EAAD,CACEJ,IAAKI,EACLA,MAAOA,EACPjC,OAAmB,OAAXA,EAAkBA,EAAS,EAAI,KACvCuC,QAAS,kBAAM2C,EAAgBjD,IAC/BO,QAAS,SAAAwB,GAEP,GADAA,EAAEmD,iBACEjG,EAAS,CACX,IAAMkG,EAAaxC,EAAQjD,KAAI,SAACkF,EAAOjF,GACrC,OAAIA,IAAMK,EACDoF,SAASrD,EAAEC,OAAOnC,OACb+E,KAEhBhC,EAAWuC,KAGftF,MAAO8C,GAAWA,EAAQ3C,GAAS2C,EAAQ3C,QAASqF,EACpDpF,OAASmB,GAAauB,GAAWA,EAAQ3C,IAAsB,WAAXlB,IAAwBiF,sBAAYvB,GAAQxC,GAAS,IAAM2C,EAAQ3C,GACvHQ,aAAcA,QAIpB,kBAAC,EAAD,CAAQrC,KAAMA,EAAM2C,UAAW,kBAAMiC,GAAgB,MACpDD,GACC,kBAAC,EAAD,CACEvB,SAAUA,EACVC,WAAY,kBAAMuB,GAAgB,IAClCtB,SAAqB,WAAX3C,EAAsBX,EAAO,KACvCiD,UAAWA,EACXM,gBAAiBA,MEjHP4D,QACW,cAA7BnG,OAAOoG,SAASC,UAEe,UAA7BrG,OAAOoG,SAASC,UAEhBrG,OAAOoG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f9abee67.chunk.js","sourcesContent":["export function getRating(number) {\n  switch (Math.round(number)) {\n    case 0:\n      return 'Very Easy';\n    case 1:\n      return 'Easy';\n    case 2:\n      return 'Medium';\n    case 3:\n      return 'Hard';\n    case 4:\n      return 'Very Hard';\n    case 5:\n      return 'Deadly';\n    default:\n      return null;\n  }\n}\n\nexport function formatTime(time) {\n  return `${Math.floor(time / 60) < 10 ? `0${Math.floor(time / 60)}` : Math.floor(time / 60)}:${\n    time % 60 < 10 ? `0${time % 60}` : time % 60\n  }`;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  min-height: 50px;\n`;\n\nexport const Button = styled.button`\n  font-size: 1rem;\n  background: transparent;\n`;\n\nexport const StarContainer = styled.span(\n  ({ rating }) => `\n  background: linear-gradient(to right, #000 ${(rating / 5) * 100}%, lightgrey ${(rating / 5) * 100}%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n);\n","import React from 'react';\nimport { getRating } from '../../helpers';\nimport { Container, Button, StarContainer } from './styles';\n\nfunction Controls({ status, start, giveUp, playing, rating }) {\n\n  function onClick() {\n    if (window.confirm(\"Are you sure you want to give up?\")) giveUp();\n  }\n\n  return (\n    <Container>\n      <Button onClick={playing ? onClick : start}>{playing ? 'Give up' : status ? 'Play again' : 'Play'}</Button>\n      {playing && (\n        <div>\n          {getRating(rating)} <StarContainer rating={rating}>★★★★★</StarContainer>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default Controls;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 5px;\n  @media screen and (min-width: 600px) {\n    display: none;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 1rem;\n  background: transparent;\n  color: dodgerblue;\n  flex: 1;\n  padding: 0;\n  margin: 2px;\n`;\n","import React from 'react';\nimport { Container, Button } from './styles';\n\nfunction Buttons({ onPress }) {\n  return (\n    <Container>\n      {Array.from(Array(9).keys()).map(i => (\n        <Button key={i} value={i + 1} onClick={onPress}>\n          {i + 1}\n        </Button>\n      ))}\n      <Button value={null} onClick={onPress}>\n        ←\n      </Button>\n    </Container>\n  );\n}\n\nexport default Buttons;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div(\n  props => `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-right: ${props.index % 9 === 2 || props.index % 9 === 5 ? 2 : 1}px solid grey;\n  border-bottom: ${(props.index > 17 && props.index < 27) || (props.index > 44 && props.index < 54) ? 2 : 1}px\n    solid grey;\n  font-size: 20px;\n  box-shadow: ${props.wrong ? 'inset 0 0 10px red' : 'none'};\n`\n);\n\nexport const Input = styled.input`\n  width: 90%;\n  height: 90%;\n  border: none;\n  text-align: center;\n  font-size: 20px;\n  font-family: 'Kalam', cursive;\n  color: grey;\n  background: transparent;\n  @media screen and (max-width: 600px) {\n    display: none;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-size: 20px;\n  font-weight: bold;\n  font-family: 'Kalam', cursive;\n  color: grey;\n  background: transparent;\n  box-shadow: ${props => (props.focused ? 'inset 0 0 10px dodgerblue' : 'none')};\n  @media screen and (min-width: 600px) {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport { StyledCell, Input, Button } from './styles';\n\nfunction Cell({ index, number, onFocus, onEnter, value, wrong, currentInput }) {\n  return (\n    <StyledCell index={index} wrong={wrong}>\n      {number ? (\n        number\n      ) : (\n        <React.Fragment>\n          <Input value={value} onChange={onEnter} />\n          <Button onClick={onFocus} focused={currentInput === index && !wrong}>\n            {value}\n          </Button>\n        </React.Fragment>\n      )}\n    </StyledCell>\n  );\n}\n\nexport default Cell;\n","import styled from 'styled-components';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-rows: repeat(9, 10vw);\n  grid-template-columns: repeat(9, 10vw);\n  border: 1px solid grey;\n  border-top: 2px solid grey;\n  border-left: 2px solid grey;\n  background: transparent;\n  @media screen and (min-width: 600px) {\n    grid-template-rows: repeat(9, 50px);\n    grid-template-columns: repeat(9, 50px);\n  }\n`;\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const OpenButton = styled.button`\n  font-size: 14px;\n  background: transparent;\n`;\n","import React from 'react';\nimport { formatTime } from '../../helpers.js';\nimport { Container, OpenButton } from './styles';\n\nfunction Footer({ time, openModal }) {\n  return (\n    <Container>\n      <p>{formatTime(time)}</p>\n      <OpenButton onClick={openModal}>Settings</OpenButton>\n    </Container>\n  );\n}\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const Background = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #fff;\n  padding: 10px;\n  max-width: 80vw;\n`;\n\nexport const CloseButton = styled.button`\n  border: none;\n  background: transparent;\n  align-self: flex-end;\n  font-size: 18px;\n`;\n\nexport const ToggleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Toggle = styled.label`\n  width: 20px;\n  height: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n  box-shadow: inset 0 0 5px ${props => props.highlight ? \"green\" : \"grey\"};\n  color: green;\n  font-size: 14px;\n`;\n\nexport const Hidden = styled.input`\n  display: none;\n`;\n","import React from 'react';\nimport { formatTime, getRating } from '../../helpers.js';\nimport { Background, Container, ToggleContainer, Toggle, Hidden, CloseButton } from './styles';\n\nfunction Settings({ topGames, closeModal, thisTime, highlight, toggleHighlight }) {\n\n  function toggle(e) {\n    toggleHighlight(e.target.checked);\n    localStorage.setItem('highlightWrongNumbers', e.target.checked);\n  }\n\n  return (\n    <Background>\n      <Container>\n        <CloseButton onClick={closeModal}>✖</CloseButton>\n        {thisTime && <h2>Solved in {formatTime(thisTime)}!</h2>}\n        <span>Your top games:</span>\n        {topGames.length ? (\n          <ol>\n            {topGames &&\n              topGames.map((game, index) => (\n                <li key={index}>\n                  <strong>{game.date}</strong> {formatTime(game.time)} ({getRating(game.rating)})\n                </li>\n              ))}\n          </ol>\n        ) : (\n          <p>None yet...</p>\n        )}\n        {!thisTime && (\n          <ToggleContainer>\n            Highlight wrong numbers\n            <Toggle highlight={highlight}>\n              <Hidden\n                type=\"checkbox\"\n                onChange={toggle}\n              />\n              {highlight && \"✔\"}\n            </Toggle>\n          </ToggleContainer>\n        )}\n      </Container>\n    </Background>\n  );\n}\n\nexport default Settings;\n","import React, { useState, useEffect } from 'react';\nimport useInterval from './hooks/useInterval';\nimport { makepuzzle, solvepuzzle, ratepuzzle } from 'sudoku';\nimport Controls from './components/Controls';\nimport Buttons from './components/Buttons';\nimport Cell from './components/Cell';\nimport Grid from './components/Grid';\nimport Footer from './components/Footer';\nimport Settings from './components/Settings';\n\nfunction App() {\n  const [playing, togglePlaying] = useState(false);\n  const [time, setTime] = useState(0);\n  const [puzzle, setPuzzle] = useState(Array.from(Array(81)));\n  const [rating, setRating] = useState(null);\n  const [guesses, setGuesses] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [modalOpen, toggleModalOpen] = useState(false);\n  const [highlight, toggleHighlight] = useState(localStorage.getItem('highlightWrongNumbers') === 'true' || false);\n  const [currentInput, setCurrentInput] = useState(null);\n  const [topGames, setTopGames] = useState(JSON.parse(localStorage.getItem('topGames')) || []);\n\n  function start() {\n    setPuzzle(Array.from(Array(81)).fill(9));\n    setStatus(null);\n    togglePlaying(true);\n    setTime(0);\n    setCurrentInput(null);\n    const newPuzzle = makepuzzle();\n    setPuzzle(newPuzzle);\n    const newRating = ratepuzzle(newPuzzle, 5);\n    setRating(newRating);\n    setGuesses(newPuzzle.map(number => (number !== null ? number + 1 : null)));\n  }\n\n  function giveUp() {\n    setStatus('given up');\n    togglePlaying(false);\n    setPuzzle(solvepuzzle(puzzle));\n  }\n\n  useInterval(\n    () => {\n      setTime(time + 1);\n    },\n    playing ? 1000 : null\n  );\n\n  useEffect(() => {\n    if (\n      guesses &&\n      solvepuzzle(puzzle) &&\n      guesses.join('') ===\n        solvepuzzle(puzzle)\n          .map(number => number + 1)\n          .join('')\n    ) {\n      setStatus('solved');\n      if (topGames.length < 5 || time < topGames[topGames.length - 1].time) {\n        const today = new Date();\n        let updatedGames = topGames;\n        updatedGames.push({ time, rating, date: today.toLocaleDateString('en-GB') });\n        updatedGames = updatedGames.sort((a, b) => a.time - b.time);\n        if (updatedGames.length > 5) updatedGames = updatedGames.slice(0, 5);\n        localStorage.setItem('topGames', JSON.stringify(updatedGames));\n        setTopGames(updatedGames);\n      }\n      togglePlaying(false);\n      toggleModalOpen(true);\n    } else if (guesses && guesses.every(guess => typeof guess === 'number')) {\n      setStatus('filled');\n    }\n  }, [guesses, puzzle, topGames, time, rating]);\n\n  return (\n    <div>\n      <Controls\n        status={status}\n        start={start}\n        giveUp={giveUp}\n        playing={playing}\n        rating={rating}\n      />\n      <Buttons\n        onPress={e => {\n          e.preventDefault();\n          const newGuesses = guesses.map((guess, i) => {\n            if (i === currentInput) {\n              return parseInt(e.target.value);\n            } else return guess;\n          });\n          setGuesses(newGuesses);\n        }}\n      />\n      <Grid>\n        {puzzle.map((number, index) => (\n          <Cell\n            key={index}\n            index={index}\n            number={number !== null ? number + 1 : null}\n            onFocus={() => setCurrentInput(index)}\n            onEnter={e => {\n              e.preventDefault();\n              if (playing) {\n                const newGuesses = guesses.map((guess, i) => {\n                  if (i === index) {\n                    return parseInt(e.target.value);\n                  } else return guess;\n                });\n                setGuesses(newGuesses);\n              }\n            }}\n            value={guesses && guesses[index] ? guesses[index] : undefined}\n            wrong={((highlight && guesses && guesses[index]) || status === 'filled') && solvepuzzle(puzzle)[index] + 1 !== guesses[index]}\n            currentInput={currentInput}\n          />\n        ))}\n      </Grid>\n      <Footer time={time} openModal={() => toggleModalOpen(true)} />\n      {modalOpen && (\n        <Settings\n          topGames={topGames}\n          closeModal={() => toggleModalOpen(false)}\n          thisTime={status === 'solved' ? time : null}\n          highlight={highlight}\n          toggleHighlight={toggleHighlight}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}